# prop.table(table((short_table$short_price - short_table$Close) / short_table$short_price * 100 > 0.15))
cat("Median =", round(median(short_table$short_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(short_table$short_profit, breaks = 100)
abline(v = median(short_table$short_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", low_quant <- quantile(data$open_to_low_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
short_table <- data[data$open_to_low_percent > low_quant & data$Year > 2013, ]
short_table$short_price <- short_table$Open * (100 - low_quant[[1]]) / 100
# profit calc
short_table$short_profit <- (short_table$short_price - short_table$Close) / short_table$short_price * 100
reward_to_risk <- 2
risk <- sd(short_table$short_profit)
initial <- 100
for (i in 1:nrow(short_table)) {
if (short_table$short_profit[i] < -risk) {
short_table$short_profit[i] <- -risk
} else if (short_table$short_profit[i] > reward_to_risk * risk) {
short_table$short_profit[i] <- reward_to_risk * risk
} else {
short_table$short_profit[i] <- short_table$short_profit[i]
}
initial <- initial * (1 + short_table$short_profit[i] * 3 / 100)
}
# prop.table(table((short_table$short_price - short_table$Close) / short_table$short_price * 100 > 0.15))
cat("Median =", round(median(short_table$short_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(short_table$short_profit, breaks = 100)
abline(v = median(short_table$short_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", low_quant <- quantile(data$open_to_low_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
short_table <- data[data$open_to_low_percent > low_quant & data$Year > 2013, ]
short_table$short_price <- short_table$Open * (100 - low_quant[[1]]) / 100
# profit calc
short_table$short_profit <- (short_table$short_price - short_table$Close) / short_table$short_price * 100
reward_to_risk <- 3
risk <- sd(short_table$short_profit)
initial <- 100
for (i in 1:nrow(short_table)) {
if (short_table$short_profit[i] < -risk) {
short_table$short_profit[i] <- -risk
} else if (short_table$short_profit[i] > reward_to_risk * risk) {
short_table$short_profit[i] <- reward_to_risk * risk
} else {
short_table$short_profit[i] <- short_table$short_profit[i]
}
initial <- initial * (1 + short_table$short_profit[i] * 3 / 100)
}
# prop.table(table((short_table$short_price - short_table$Close) / short_table$short_price * 100 > 0.15))
cat("Median =", round(median(short_table$short_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(short_table$short_profit, breaks = 100)
abline(v = median(short_table$short_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", high_quant <- quantile(data$open_to_high_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
long_table <- data[data$open_to_high_percent > high_quant & data$Year > 2015, ]
long_table$long_price <- long_table$Open * (100 + high_quant[[1]]) / 100
# profit calc
long_table$long_profit <- (long_table$Close - long_table$long_price) / long_table$long_price * 100
reward_to_risk <- 2
risk <- sd(long_table$long_profit)
initial <- 100
for (i in 1:nrow(long_table)) {
if (long_table$long_profit[i] < -risk) {
long_table$long_profit[i] <- -risk
} else if (long_table$long_profit[i] > reward_to_risk * risk) {
long_table$long_profit[i] <- reward_to_risk * risk
} else {
long_table$long_profit[i] <- long_table$long_profit[i]
}
initial <- initial * (1 + long_table$long_profit[i] * 3 / 100)
}
# prop.table(table((long_table$long_price - long_table$Close) / long_table$long_price * 100 > 0.15))
cat("Median =", round(median(long_table$long_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(long_table$long_profit, breaks = 100)
abline(v = median(long_table$long_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", low_quant <- quantile(data$open_to_low_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
short_table <- data[data$open_to_low_percent > low_quant & data$Year > 2015, ]
short_table$short_price <- short_table$Open * (100 - low_quant[[1]]) / 100
# profit calc
short_table$short_profit <- (short_table$short_price - short_table$Close) / short_table$short_price * 100
reward_to_risk <- 3
risk <- sd(short_table$short_profit)
initial <- 100
for (i in 1:nrow(short_table)) {
if (short_table$short_profit[i] < -risk) {
short_table$short_profit[i] <- -risk
} else if (short_table$short_profit[i] > reward_to_risk * risk) {
short_table$short_profit[i] <- reward_to_risk * risk
} else {
short_table$short_profit[i] <- short_table$short_profit[i]
}
initial <- initial * (1 + short_table$short_profit[i] * 3 / 100)
}
# prop.table(table((short_table$short_price - short_table$Close) / short_table$short_price * 100 > 0.15))
cat("Median =", round(median(short_table$short_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(short_table$short_profit, breaks = 100)
abline(v = median(short_table$short_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", low_quant <- quantile(data$open_to_low_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
short_table <- data[data$open_to_low_percent > low_quant & data$Year > 2015, ]
short_table$short_price <- short_table$Open * (100 - low_quant[[1]]) / 100
# profit calc
short_table$short_profit <- (short_table$short_price - short_table$Close) / short_table$short_price * 100
reward_to_risk <- 3
risk <- 0.75*sd(short_table$short_profit)
initial <- 100
for (i in 1:nrow(short_table)) {
if (short_table$short_profit[i] < -risk) {
short_table$short_profit[i] <- -risk
} else if (short_table$short_profit[i] > reward_to_risk * risk) {
short_table$short_profit[i] <- reward_to_risk * risk
} else {
short_table$short_profit[i] <- short_table$short_profit[i]
}
initial <- initial * (1 + short_table$short_profit[i] * 3 / 100)
}
# prop.table(table((short_table$short_price - short_table$Close) / short_table$short_price * 100 > 0.15))
cat("Median =", round(median(short_table$short_profit), 4), "%", "\n$100 in 2014 will become ", initial, " following this strategy.")
hist(short_table$short_profit, breaks = 100)
abline(v = median(short_table$short_profit), col = "red")
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", high_quant <- quantile(data$open_to_high_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
long_table <- data[data$open_to_high_percent > high_quant & data$Year > 1999 & data$Year < 2010, ]
long_table$long_price <- long_table$Open * (100 + high_quant[[1]]) / 100
# profit calc
long_table$long_profit <- (long_table$Close - long_table$long_price) / long_table$long_price * 100
reward_to_risk <- 2
cat("stop loss =", "-", risk <- sd(long_table$long_profit), "%")
initial_long <- 100
for (i in 1:nrow(long_table)) {
if (long_table$long_profit[i] < -risk) {
long_table$long_profit[i] <- -risk
} else if (long_table$long_profit[i] > reward_to_risk * risk) {
long_table$long_profit[i] <- reward_to_risk * risk
} else {
long_table$long_profit[i] <- long_table$long_profit[i]
}
initial_long <- initial_long * (1 + long_table$long_profit[i] / 100)
}
# prop.table(table((long_table$long_price - long_table$Close) / long_table$long_price * 100 > 0.15))
cat("Median =", round(median(long_table$long_profit), 4), "%")
cat("$100 in 2014 will become ", initial_long, " following this strategy.")
hist(long_table$long_profit, breaks = 40, main = "Simple Trend Long Profit%", xlab = "Profit%")
abline(v = median(long_table$long_profit), col = "red")
View(long_table)
View(data)
View(long_table)
#hist(data$open_to_high_percent, breaks = 100)
cat("Entry price =", high_quant <- quantile(data$open_to_high_percent, prob = 0.60))
#abline(v = high_quant, col = "red")
long_table <- data[data$open_to_high_percent > high_quant & data$Year > 1979 & data$Year < 1990, ]
View(long_table)
qqline(data$open_to_close_percent)
install.packages("moments")
library(moments)
mean(data$open_to_close_percent)
sd(data$open_to_close_percent)
skewness(data$open_to_close_percent)
kurtosis(data$open_to_close_percent)
hist(data$open_to_close_percent)
hist(data$open_to_close_percent, breaks = 100)
hist(data$open_to_close_percent, breaks = 100, x = c(-5, 5))
?hist
hist(data$open_to_close_percent, breaks = 100, xlim = c(-5, 5))
hist(data$open_to_close_percent, breaks = 100, xlim = c(-3, 3))
install.packages("moments")
library(moments)
mean(data$open_to_close_percent)
sd(data$open_to_close_percent)
skewness(data$open_to_close_percent)
kurtosis(data$open_to_close_percent)
quantile(data$open_to_close_percent, prob = 0.7)
quantile(data$open_to_close_percent, prob = 0.5 + 0.25)
quantile(data$open_to_close_percent, prob = 0.5 * (1+ 75%))
quantile(data$open_to_close_percent, prob = 0.5 * (1+ .75))
quantile(data$open_to_close_percent, prob = 0.5 * (1- .75))
stat <- for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
gammaMLE(X)
}
simulations <- 5000
n <- 500
stat <- for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
gammaMLE(X)
}
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
stat <- for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
gammaMLE(X)
}
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
stat <- for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
gammaMLE(X)
}
hist(beta_hats, breaks = 50, xlab = "beta hat")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulation)
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulations)
beta_hats <- numeric(simulations)
for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
alpha_hats[i] <- gammaMLE(X)["alpha_hat"]
beta_hats[i] <- gammaMLE(X)["beta_hat"]
}
hist(alpha_hats, breaks = 50, xlab = "alpha hat")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulations)
beta_hats <- numeric(simulations)
for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
stat <- gammaMLE(X)
alpha_hats[i] <- stat["alpha_hat"]
beta_hats[i] <- stat["beta_hat"]
}
hist(alpha_hats, breaks = 50, xlab = "alpha hat")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulations)
beta_hats <- numeric(simulations)
for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
stat <- gammaMLE(X)
alpha_hats[i] <- stat[1]
beta_hats[i] <- stat[2]
}
hist(alpha_hats, breaks = 50, xlab = "alpha hat")
hist(beta_hats, breaks = 50, xlab = "beta hat")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulations)
beta_hats <- numeric(simulations)
for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
stat <- gammaMLE(X)
alpha_hats[i] <- stat[1]
beta_hats[i] <- stat[2]
}
hist(alpha_hats, breaks = 50, xlab = "alpha hat")
hist(beta_hats, breaks = 50, xlab = "beta hat")
cat("Mean of alpha_hat:", mean(alpha_hats), "\n")
cat("Variance of alpha_hat:", var(alpha_hats), "\n\n")
cat("Mean of beta_hat:", mean(beta_hats), "\n")
cat("Variance of beta_hat:", var(beta_hats), "\n\n")
cat("Covariance between alpha_hat and beta_hat:", cov(alpha_hats, beta_hats), "\n")
gammaMLE <- function(X) {
f <- function(a) {log(a) - digamma(a) - log(mean(X)) + sum(log(X))/n}
f_deri <- function(a) {1/a - trigamma(a)}
a.prev = -Inf
a = mean(X)^2/var(X)
while (abs(a-a.prev) > 1e-6) {
if (a <= 0) { a = 1e-6 }
a.prev = a
a.next = a.prev - f(a.prev) / f_deri(a.prev)
a = a.next
}
a.hat = a
b.hat = mean(X)/var(X)
return(c(a.hat,b.hat))
}
simulations <- 5000
n <- 500
alpha_hats <- numeric(simulations)
beta_hats <- numeric(simulations)
for (i in 1:simulations){
X = rgamma(n, 1, rate = 2)
stat <- gammaMLE(X)
alpha_hats[i] <- stat[1]
beta_hats[i] <- stat[2]
}
hist(alpha_hats, breaks = 50, xlab = "alpha hat")
hist(beta_hats, breaks = 50, xlab = "beta hat")
cat("Mean of alpha_hat:", mean(alpha_hats), "\n")
cat("Variance of alpha_hat:", var(alpha_hats), "\n\n")
cat("Mean of beta_hat:", mean(beta_hats), "\n")
cat("Variance of beta_hat:", var(beta_hats), "\n\n")
cat("Covariance:", cov(alpha_hats, beta_hats), "\n")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
source("~/Desktop/Yale/Spring 24:25/S&DS 242/HW7.R")
setwd("~/Documents/GitHub/LinearAlgebraProject/LinearProject2")
reticulate::repl_python()
